/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeeSearchCriteria {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "dateBefore", skip_serializing_if = "Option::is_none")]
    pub date_before: Option<String>,
    #[serde(rename = "dateAfter", skip_serializing_if = "Option::is_none")]
    pub date_after: Option<String>,
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<bool>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    #[serde(rename = "bookmarked", skip_serializing_if = "Option::is_none")]
    pub bookmarked: Option<bool>,
}

impl FeeSearchCriteria {
    pub fn new() -> FeeSearchCriteria {
        FeeSearchCriteria {
            id: None,
            date_before: None,
            date_after: None,
            subject: None,
            body: None,
            archived: None,
            tag: None,
            bookmarked: None,
        }
    }
}
