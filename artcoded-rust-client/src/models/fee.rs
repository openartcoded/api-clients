/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Fee {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "dateCreation", skip_serializing_if = "Option::is_none")]
    pub date_creation: Option<String>,
    #[serde(rename = "updatedDate", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<String>,
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    #[serde(rename = "attachmentIds", skip_serializing_if = "Option::is_none")]
    pub attachment_ids: Option<Vec<String>>,
    #[serde(rename = "bookmarked", skip_serializing_if = "Option::is_none")]
    pub bookmarked: Option<bool>,
    #[serde(rename = "bookmarkedDate", skip_serializing_if = "Option::is_none")]
    pub bookmarked_date: Option<String>,
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<bool>,
    #[serde(rename = "archivedDate", skip_serializing_if = "Option::is_none")]
    pub archived_date: Option<String>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    #[serde(rename = "priceHVAT", skip_serializing_if = "Option::is_none")]
    pub price_hvat: Option<f64>,
    #[serde(rename = "vat", skip_serializing_if = "Option::is_none")]
    pub vat: Option<f64>,
    #[serde(rename = "imported", skip_serializing_if = "Option::is_none")]
    pub imported: Option<bool>,
    #[serde(rename = "importedDate", skip_serializing_if = "Option::is_none")]
    pub imported_date: Option<String>,
    #[serde(rename = "priceTot", skip_serializing_if = "Option::is_none")]
    pub price_tot: Option<f64>,
}

impl Fee {
    pub fn new() -> Fee {
        Fee {
            id: None,
            date_creation: None,
            updated_date: None,
            date: None,
            subject: None,
            body: None,
            attachment_ids: None,
            bookmarked: None,
            bookmarked_date: None,
            archived: None,
            archived_date: None,
            tag: None,
            price_hvat: None,
            vat: None,
            imported: None,
            imported_date: None,
            price_tot: None,
        }
    }
}
