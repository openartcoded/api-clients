/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReminderTask {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "dateCreation", skip_serializing_if = "Option::is_none")]
    pub date_creation: Option<String>,
    #[serde(rename = "updatedDate", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<String>,
    #[serde(rename = "lastExecutionDate", skip_serializing_if = "Option::is_none")]
    pub last_execution_date: Option<String>,
    #[serde(rename = "nextDate", skip_serializing_if = "Option::is_none")]
    pub next_date: Option<String>,
    #[serde(rename = "specificDate", skip_serializing_if = "Option::is_none")]
    pub specific_date: Option<String>,
    #[serde(rename = "calendarDate", skip_serializing_if = "Option::is_none")]
    pub calendar_date: Option<String>,
    #[serde(rename = "cronExpression", skip_serializing_if = "Option::is_none")]
    pub cron_expression: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    #[serde(rename = "sendMail", skip_serializing_if = "Option::is_none")]
    pub send_mail: Option<bool>,
    #[serde(rename = "sendSms", skip_serializing_if = "Option::is_none")]
    pub send_sms: Option<bool>,
    #[serde(rename = "inAppNotification", skip_serializing_if = "Option::is_none")]
    pub in_app_notification: Option<bool>,
    #[serde(rename = "actionKey", skip_serializing_if = "Option::is_none")]
    pub action_key: Option<String>,
    #[serde(rename = "customActionName", skip_serializing_if = "Option::is_none")]
    pub custom_action_name: Option<String>,
    #[serde(rename = "persistResult", skip_serializing_if = "Option::is_none")]
    pub persist_result: Option<bool>,
    #[serde(rename = "actionParameters", skip_serializing_if = "Option::is_none")]
    pub action_parameters: Option<Vec<models::ActionParameter>>,
}

impl ReminderTask {
    pub fn new() -> ReminderTask {
        ReminderTask {
            id: None,
            date_creation: None,
            updated_date: None,
            last_execution_date: None,
            next_date: None,
            specific_date: None,
            calendar_date: None,
            cron_expression: None,
            title: None,
            description: None,
            disabled: None,
            send_mail: None,
            send_sms: None,
            in_app_notification: None,
            action_key: None,
            custom_action_name: None,
            persist_result: None,
            action_parameters: None,
        }
    }
}
