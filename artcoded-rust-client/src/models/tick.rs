/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Tick {
    #[serde(rename = "addedDate", skip_serializing_if = "Option::is_none")]
    pub added_date: Option<String>,
    #[serde(rename = "priceWhenAdded", skip_serializing_if = "Option::is_none")]
    pub price_when_added: Option<f64>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
}

impl Tick {
    pub fn new() -> Tick {
        Tick {
            added_date: None,
            price_when_added: None,
            symbol: None,
            currency: None,
        }
    }
}
