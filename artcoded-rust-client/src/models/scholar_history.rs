/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScholarHistory {
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<String>,
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
    #[serde(rename = "current", skip_serializing_if = "Option::is_none")]
    pub current: Option<bool>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "school", skip_serializing_if = "Option::is_none")]
    pub school: Option<String>,
}

impl ScholarHistory {
    pub fn new() -> ScholarHistory {
        ScholarHistory {
            from: None,
            to: None,
            current: None,
            title: None,
            school: None,
        }
    }
}
