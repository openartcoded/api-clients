/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MenuLink {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
    #[serde(rename = "updatedDate", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "routerLinkActiveOptions", skip_serializing_if = "Option::is_none")]
    pub router_link_active_options: Option<Box<models::RouterLinkOption>>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<Vec<String>>,
    #[serde(rename = "routerLink", skip_serializing_if = "Option::is_none")]
    pub router_link: Option<Vec<String>>,
    #[serde(rename = "show", skip_serializing_if = "Option::is_none")]
    pub show: Option<bool>,
    #[serde(rename = "numberOfTimesClicked", skip_serializing_if = "Option::is_none")]
    pub number_of_times_clicked: Option<i64>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<String>>,
}

impl MenuLink {
    pub fn new() -> MenuLink {
        MenuLink {
            id: None,
            order: None,
            updated_date: None,
            title: None,
            description: None,
            router_link_active_options: None,
            icon: None,
            router_link: None,
            show: None,
            number_of_times_clicked: None,
            roles: None,
        }
    }
}

