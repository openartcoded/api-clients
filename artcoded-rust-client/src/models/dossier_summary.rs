/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DossierSummary {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "totalEarnings", skip_serializing_if = "Option::is_none")]
    pub total_earnings: Option<f64>,
    #[serde(rename = "closedDate", skip_serializing_if = "Option::is_none")]
    pub closed_date: Option<String>,
    #[serde(
        rename = "computedTotalExpensesPerTag",
        skip_serializing_if = "Option::is_none"
    )]
    pub computed_total_expenses_per_tag: Option<std::collections::HashMap<String, f64>>,
    #[serde(rename = "totalExpenses", skip_serializing_if = "Option::is_none")]
    pub total_expenses: Option<f64>,
}

impl DossierSummary {
    pub fn new() -> DossierSummary {
        DossierSummary {
            name: None,
            total_earnings: None,
            closed_date: None,
            computed_total_expenses_per_tag: None,
            total_expenses: None,
        }
    }
}
