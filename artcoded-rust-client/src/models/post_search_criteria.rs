/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostSearchCriteria {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "dateBefore", skip_serializing_if = "Option::is_none")]
    pub date_before: Option<String>,
    #[serde(rename = "dateAfter", skip_serializing_if = "Option::is_none")]
    pub date_after: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
}

impl PostSearchCriteria {
    pub fn new() -> PostSearchCriteria {
        PostSearchCriteria {
            id: None,
            date_before: None,
            date_after: None,
            title: None,
            content: None,
            tag: None,
        }
    }
}

