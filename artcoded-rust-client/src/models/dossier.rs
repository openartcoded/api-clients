/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Dossier {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "creationDate", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<String>,
    #[serde(rename = "updatedDate", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "feeIds", skip_serializing_if = "Option::is_none")]
    pub fee_ids: Option<Vec<String>>,
    #[serde(rename = "invoiceIds", skip_serializing_if = "Option::is_none")]
    pub invoice_ids: Option<Vec<String>>,
    #[serde(rename = "documentIds", skip_serializing_if = "Option::is_none")]
    pub document_ids: Option<Vec<String>>,
    #[serde(rename = "closed", skip_serializing_if = "Option::is_none")]
    pub closed: Option<bool>,
    #[serde(rename = "closedDate", skip_serializing_if = "Option::is_none")]
    pub closed_date: Option<String>,
    #[serde(rename = "backupDate", skip_serializing_if = "Option::is_none")]
    pub backup_date: Option<String>,
    #[serde(rename = "tvaDue", skip_serializing_if = "Option::is_none")]
    pub tva_due: Option<f64>,
    #[serde(rename = "advancePayments", skip_serializing_if = "Option::is_none")]
    pub advance_payments: Option<Vec<models::TvaAdvancePayment>>,
    #[serde(
        rename = "recalledForModification",
        skip_serializing_if = "Option::is_none"
    )]
    pub recalled_for_modification: Option<bool>,
    #[serde(
        rename = "recalledForModificationDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub recalled_for_modification_date: Option<String>,
    #[serde(rename = "bookmarked", skip_serializing_if = "Option::is_none")]
    pub bookmarked: Option<bool>,
    #[serde(rename = "bookmarkedDate", skip_serializing_if = "Option::is_none")]
    pub bookmarked_date: Option<String>,
    #[serde(rename = "dossierUploadId", skip_serializing_if = "Option::is_none")]
    pub dossier_upload_id: Option<String>,
    #[serde(rename = "imported", skip_serializing_if = "Option::is_none")]
    pub imported: Option<bool>,
    #[serde(rename = "importedDate", skip_serializing_if = "Option::is_none")]
    pub imported_date: Option<String>,
    #[serde(rename = "tvaToBePaid", skip_serializing_if = "Option::is_none")]
    pub tva_to_be_paid: Option<f64>,
    #[serde(
        rename = "totalAdvancePayments",
        skip_serializing_if = "Option::is_none"
    )]
    pub total_advance_payments: Option<f64>,
}

impl Dossier {
    pub fn new() -> Dossier {
        Dossier {
            id: None,
            creation_date: None,
            updated_date: None,
            name: None,
            description: None,
            fee_ids: None,
            invoice_ids: None,
            document_ids: None,
            closed: None,
            closed_date: None,
            backup_date: None,
            tva_due: None,
            advance_payments: None,
            recalled_for_modification: None,
            recalled_for_modification_date: None,
            bookmarked: None,
            bookmarked_date: None,
            dossier_upload_id: None,
            imported: None,
            imported_date: None,
            tva_to_be_paid: None,
            total_advance_payments: None,
        }
    }
}
