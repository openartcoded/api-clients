/*
 * Artcoded
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Curriculum {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "experiences", skip_serializing_if = "Option::is_none")]
    pub experiences: Option<Vec<models::Experience>>,
    #[serde(rename = "skills", skip_serializing_if = "Option::is_none")]
    pub skills: Option<Vec<models::Skill>>,
    #[serde(rename = "personalProjects", skip_serializing_if = "Option::is_none")]
    pub personal_projects: Option<Vec<models::PersonalProject>>,
    #[serde(rename = "scholarHistories", skip_serializing_if = "Option::is_none")]
    pub scholar_histories: Option<Vec<models::ScholarHistory>>,
    #[serde(rename = "hobbies", skip_serializing_if = "Option::is_none")]
    pub hobbies: Option<Vec<models::Hobby>>,
    #[serde(rename = "person", skip_serializing_if = "Option::is_none")]
    pub person: Option<Box<models::Person>>,
    #[serde(rename = "introduction", skip_serializing_if = "Option::is_none")]
    pub introduction: Option<String>,
    #[serde(rename = "updatedDate", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<String>,
    #[serde(rename = "freemarkerTemplateId", skip_serializing_if = "Option::is_none")]
    pub freemarker_template_id: Option<String>,
}

impl Curriculum {
    pub fn new() -> Curriculum {
        Curriculum {
            id: None,
            experiences: None,
            skills: None,
            personal_projects: None,
            scholar_histories: None,
            hobbies: None,
            person: None,
            introduction: None,
            updated_date: None,
            freemarker_template_id: None,
        }
    }
}

